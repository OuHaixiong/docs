全局变量
$wp：WP对象，
$wp_query：WP_Query对象，用来处理查询数据。get_posts()可以查询一个文章，也可以查询一个列表。->posts:文章列表；->post:当前的文章
$wp_the_query ： WP_Query对象，
$wp_locale :WP_Locale对象
$wp_filter : 数组，里面有多达653+的元素，存放各个过滤规则; 数组的每一项是一个WP_Hook对象，
$wpdb : wpdb对象，里面有数据库表名，如$wpdb->postmeta = wp_2_postmeta,$wpdb->last_query = 'select XXX'
$wp_post_types：一个数组，数组里面是全站的所有文章类型，每一项是一个WP_Post_Type对象
$menu ： 后台菜单
$wpdb:wpdb对象，用来查询数据库的，里面有最后一次查询sql和最后一次查询结果等
$wp_object_cache : WP_Object_Cache对象(./wp-includes/cache.php)，缓存类
$wp_rewrite : WP_Rewrite对象

文件
./wp-includes/meta.php 对应表postmeta，主要是文章的一些属性和属性值对应的表，比如文章的点击量
./wp-admin/admin.php 判断了用户是否登录

函数
wp_edit_posts_query($q=false):获取后台文章列表内容
wp_load_alloptions() : 获取表options所有autoload="yes"的记录
(array) get_option( 'active_plugins', array()[默认值] ); 获取单个配置信息

wordpress模板文件加载路径：
1，样式路径下的文件【STYLESHEETPATH】 》 2，主题路径下的文件【TEMPLATEPATH】 》 3，系统目录下的文件【/wp-includes/theme-compat/】；如获取头部模板：
get_header('abc');查找循序是先查header-abc.php，再查header.php；查找路径类似：
./wp-content/themes/Divi-child/header-abc.php
./wp-content/themes/Divi/header-abc.php
./wp-includes/theme-compat/header-abc.php


http://blog.wpjam.com/ wordpress学习文档

表
options：全站配置项
terms : 分类



wordpress性能优化建议总结：
1，移除多余的插件和保持插件为最新版本。因为加载的东西越多，你的网站性能越差。及时的更新自己所用的WordPress主题和插件，不仅能提高自己的Wordpress网站的安全性，而且有些更新是针对性能的，这样就会在性能上有所提升的。
2，优化你上传的图像，使用第三方工具进行图像的压缩。[通过 ImageOptim(Mac 版) 无损压缩图片。] 在线压缩图片：https://tinypng.com/ 或 https://www.jpegmini.com/main/shrink_photo
3，安装WordPress Super Cache或W3 Total Cache 缓存插件（貌似后者更高效）,个人更喜欢W3 Total Cache，因为它支持：页面缓存、HTML压缩、对象缓存、数据库缓存、客户端浏览器缓存、以及CDN。
4，Better WordPress Minify插件，完成css、js合并，几十个请求化为一个。
5，通过nginx设置Cache-Control 的缓存时间
    location ~* \.(?:ico|css|js|gif|jpe?g|png|swf|woff)$ {
        expires 30d;
        add_header Pragma public;
        add_header Cache-Control "public";
    }
6，通过 Nginx 设置 html、Css、JS 的Gzip压缩级别等
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 4 8k;
    gzip_min_length 1k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/x-javascript application/xml text/javascript application/javascript;
7，使用cdn加速你的图片，js，css等。使用又拍云、七牛、Free-CDN等。
8，WP-SmushIt可以为你网站上所有的图片做一次性压缩。
9，为你的图片添加延时加载。安装jQuery Image Lazy Load 插件。

后端服务器优化：
10，适当提升服务器的配置，如：cup、内存、带宽；机械硬盘换成固态硬盘
11，启用数据库查询缓存，需编辑 MySQL 配置文件（通常是在 /etc/my.cnf 路径下），在其中添加如下代码：
query_cache_type = 1  
query_cache_limit = 1M  
query_cache_size = 16M  
重启 MySQL 服务器后，就会创建大小为 16MB 的查询缓存。
检查 MySQL 运行是否正常，可运行以下查询：SHOW STATUS LIKE 'Qcache%';
12，增加索引以提高查询效率
13，安装php缓存加速扩展：如：xCache、Zend OPcache
14，开启慢查询日记，根据具体的业务优化慢查询
15，优化和修复你的数据库。在phpMyAdmin中选中这些表，然后进行”Optimize table”和”Repair table”即可。(如果要慎重起见，你最好还是同时备份一下你的数据库）你可以使用 WP-Optimize 或者 WP-DBManager 之类的插件来优化自己的数据库，这些插件能够删除那些未经审核的垃圾评论，那些回收站中的文章，那些自动保存的草稿或者文章的回滚版本等

目前http://www.mblock.cc/、https://www.makeblock.com/、http://education.makeblock.com/已进行了以上3，5，6，8，11，13几项优化。
针对第2点，需要运营人员配合，不要上传太大的图片，上传图片前对图片进行压缩。
针对第7点，education.makeblock.com已使用七牛云存储。
针对14点，已开启mysql的慢查询日记，需要根据日记优化sql或修改代码
针对15点，运营人员发布完文章后尽可能的删除掉草稿，以及回收站的文章