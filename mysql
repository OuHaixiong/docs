win 下区分大小写（表名等区分大小写）
lower_case_table_names=0

CentOS Linux卸载、安装mysql5.6

一、卸载mysql：
1、查找以前是否装有mysql
#rpm -qa|grep -i mysql
2、卸载mysql
#yum remove mysql
3、删除相关的包
#yum remove 包名

二、安装mysql：
http://dev.mysql.com/downloads/mysql/
安装mysql服务器端：
rpm ivh MySQL-server-5.6.11-2.el6.i686.rpm
安装mysql客户端：
rpm ivh MySQL-client-5.6.11-2.el6.i686.rpm

1、安装
#rpm -ivh MySQL-server-5.6.11-2.el6.i686.rpm
#rpm -ivh MySQL-client-5.6.11-2.el6.i686.rpm
2、检查MySQL服务是否开启：
#netstat -nat
如果开启的话，会有一个端口号为3306，如果没有启动的话，运用service mysql start启动mysql服务

# 命令行
mysql -u root -p            登陆(mysql [-u username] [-h host] [-p[password]] [dbname] )
show databases;             查看所有的数据库
use mysql                   选择数据库
show tables;                列出表
show columns from user;     显示表中列的属性
describe slow_log;          显示数据表结构
create database test;       创建数据库
drop database 库名;         删除数据库
drop table 表名;            删除表

  增加一个字段：alter table tabelName add column fieldName dateType;
  增加多个字段：alter table tabelName add column fieldName1 dateType,add columns fieldName2 dateType;
  多行命令输入:注意不能将单词断开;当插入或更改数据时，不能将字段的字符串展开到多行里，否则硬回车将被储存到数据中;
  每条语句输入完毕后要在末尾填加分号';'，或者填加'\g'也可以；
  查询时间：select now();
  查询当前用户：select user();
  查询数据库版本：select version();
  查询当前使用的数据库：select database();
  
  1、删除student_course数据库中的students数据表：
  rm -f student_course/students.*
  
  2、备份数据库：(将数据库test备份)
  mysqldump -u root -p test>c:\test.txt
  备份表格：(备份test数据库下的mytable表格)
  mysqldump -u root -p test mytable>c:\test.txt
  将备份数据导入到数据库：(导回test数据库)
  mysql -u root -p test
  
  3、创建临时表：(建立临时表zengchao)
  create temporary table zengchao(name varchar(10));
  
  4、创建表是先判断表是否存在
  create table if not exists students(……);
  
  5、从已经有的表中复制表的结构
  create table table2 select * from table1 where 1<>1;
  
  6、复制表
  create table table2 select * from table1;
  
  7、对表重新命名
  alter table table1 rename as table2;
  
  8、修改列的类型
  alter table table1 modify id int unsigned;//修改列id的类型为int unsigned
  alter table table1 change id sid int unsigned;//修改列id的名字为sid，而且把属性修改为int unsigned
  
  9、创建索引
  alter table table1 add index ind_id (id);
  create index ind_id on table1 (id);
  create unique index ind_id on table1 (id);//建立唯一性索引
  
  10、删除索引
  drop index idx_id on table1;
  alter table table1 drop index ind_id;
  
  11、联合字符或者多个列(将列id与":"和列name和"="连接)
  select concat(id,':',name,'=') from students;
  
  12、limit(选出10到20条)<第一个记录集的编号是0>
  select * from students order by id limit 9,10;
  
  13、MySQL不支持的功能
  事务，视图，外键和引用完整性，存储过程和触发器

14、MySQL会使用索引的操作符号
  <,<=,>=,>,=,between,in,不带%或者_开头的like
  
  15、使用索引的缺点
  1)减慢增删改数据的速度；
  2）占用磁盘空间；
  3）增加查询优化器的负担；
  当查询优化器生成执行计划时，会考虑索引，太多的索引会给查询优化器增加工作量，导致无法选择最优的查询方案；
  
  16、分析索引效率
  方法：在一般的SQL语句前加上explain；
  分析结果的含义：
  1）table：表名；
  2）type：连接的类型，(ALL/Range/Ref)。其中ref是最理想的；
  3）possible_keys：查询可以利用的索引名；
  4）key：实际使用的索引；
  5）key_len：索引中被使用部分的长度（字节）；
  6）ref：显示列名字或者"const"（不明白什么意思）；
  7）rows：显示MySQL认为在找到正确结果之前必须扫描的行数；
  8）extra：MySQL的建议；
  
  17、使用较短的定长列
  1）尽可能使用较短的数据类型；
  2）尽可能使用定长数据类型；
  a）用char代替varchar，固定长度的数据处理比变长的快些；
  b）对于频繁修改的表，磁盘容易形成碎片，从而影响数据库的整体性能；
  c）万一出现数据表崩溃，使用固定长度数据行的表更容易重新构造。使用固定长度的数据行，每个记录的开始位置都是固定记录长度的倍数，可以很容易被检测到，但是使用可变长度的数据行就不一定了；
  d）对于MyISAM类型的数据表，虽然转换成固定长度的数据列可以提高性能，但是占据的空间也大；
  
  18、使用not null和enum
  尽量将列定义为not null，这样可使数据的出来更快，所需的空间更少，而且在查询时，MySQL不需要检查是否存在特例，即null值，从而优化查询；
  如果一列只含有有限数目的特定值，如性别，是否有效或者入学年份等，在这种情况下应该考虑将其转换为enum列的值，MySQL处理的更快，因为所有的enum值在系统内都是以标识数值来表示的；
  
  19、使用optimize table
  对于经常修改的表，容易产生碎片，使在查询数据库时必须读取更多的磁盘块，降低查询性能。具有可变长的表都存在磁盘碎片问题，这个问题对blob数据类型更为突出，因为其尺寸变化非常大。可以通过使用optimize table来整理碎片，保证数据库性能不下降，优化那些受碎片影响的数据表。 optimize table可以用于MyISAM和BDB类型的数据表。实际上任何碎片整理方法都是用mysqldump来转存数据表，然后使用转存后的文件并重新建数据表；
  
  20、使用procedure analyse()
  可以使用procedure analyse()显示最佳类型的建议，使用很简单，在select语句后面加上procedure analyse()就可以了；例如：
  select * from students procedure analyse();
  select * from students procedure analyse(16,256);
  第二条语句要求procedure analyse()不要建议含有多于16个值，或者含有多于256字节的enum类型，如果没有限制，输出可能会很长；
  
  21、使用查询缓存
  1）查询缓存的工作方式：
  第一次执行某条select语句时，服务器记住该查询的文本内容和查询结果，存储在缓存中，下次碰到这个语句时，直接从缓存中返回结果；当更新数据表后，该数据表的任何缓存查询都变成无效的，并且会被丢弃。
  2）配置缓存参数：
  变量：query_cache _type，查询缓存的操作模式。有3中模式，0：不缓存；1：缓存查询，除非与 select sql_no_cache开头；2：根据需要只缓存那些以select sql_cache开头的查询； query_cache_size：设置查询缓存的最大结果集的大小，比这个值大的不会被缓存。
  
  22、调整硬件
  1）在机器上装更多的内存；
  2）增加更快的硬盘以减少I/O等待时间；
  寻道时间是决定性能的主要因素，逐字地移动磁头是最慢的，一旦磁头定位，从磁道读则很快；
  3）在不同的物理硬盘设备上重新分配磁盘活动；
  如果可能，应将最繁忙的数据库存放在不同的物理设备上，这跟使用同一物理设备的不同分区是不同的，因为它们将争用相同的物理资源（磁头）
  
  
使用master82登陆到mysql后 （已验证）
show databases;
use mysql;
mysql> update user set host='%' where user='root'; 
ERROR 1062 (23000): Duplicate entry '%-root' for key 'PRIMARY' 
mysql> select host,user from user; 
+-----------------------+------+ 
| host                  | user | 
+-----------------------+------+ 
| %                    | root |    // 查询有 % 的就是能远程连接的
| 127.0.0.1            | root | 
| 192.168.128.142      | root | 
| ::1                  | root | 
| localhost.localdomain | root | 
+-----------------------+------+ 
5 rows in set (0.00 sec)

如果要远程连接，需要配置/etc/mysql/my.cnf注释掉：#bind-address = 127.0.0.1
[root@localhost ~]# service mysql restart 
Shutting down MySQL.. SUCCESS! 
Starting MySQL.. SUCCESS! 
重启mysql即可远程登陆


下面是ubuntu下安装mysql
sudo apt-get install mysql-server mysql-client #中途会让你输入一次root用户密码
sudo apt-get install php5-mysql  #安装php5-mysql 是将php和mysql连接起来

一旦安装完成，MySQL 服务器应该自动启动。
sudo start mysql #手动的话这样启动
sudo stop mysql #手动停止

要想检查 mysqld 进程是否已经开启，可以使用下面的命令：
pgrep mysqld
如果进程开启，这个命令将会返回该进程的 id。

文件结构
MySQL配置文件：/etc/mysql/my.cnf ，其中指定了数据文件存放路径
datadir         = /var/lib/mysql  （一定是这个路径，不然无法启动成功）
如果你创建了一个名为 test 的数据库，那么这个数据库的数据会存放到 /var/lib/mysql/test 目录下。
当你修改了配置文件後，你需要重启 mysqld 才能使这些修改生效。

命令行进入MySQL
mysql -u root -p 
(输入mysql的root密码)
$ mysql -u root -p
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 37
Server version: 5.1.41-3ubuntu12.3 (Ubuntu)
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
mysql> 
修改 MySQL 的管理员密码：
sudo mysqladmin -u root password newpassword；

简单的操作
显示数据库：
mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| mysql              |
+--------------------+
2 rows in set (0.00 sec)

设置远程访问
1.取消本地监听
正常情况下，mysql占用的3306端口只是在IP 127.0.0.1上监听，拒绝了其他IP的访问（通过netstat可以查看到）。取消本地监听需要修改 my.cnf 文件：
sudo vim /etc/mysql/my.cnf
//找到如下内容，并注释
#bind-address = 127.0.0.1

2.授权法
mysql>GRANT ALL PRIVILEGES ON *.* TO <user>@"%" IDENTIFIED BY '<password>' WITH GRANT OPTION;
// grant select,insert,update,delete on *（数据库）.*（表） to user@"%"[localhost] Identified by "123456" with grant option; 
// 增加一个用户user密码为123456，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限
mysql>FLUSH PRIVILEGES
匹配字符：可以用通配符_代表任何一个字符，％代表任何字符串;
第二句表示从mysql数据库的grant表中重新加载权限数据。因为MySQL把权限都放在了cache中，所以在做完更改后需要重新加载。 

3.然后需要重启 mysql 



删除 mysql
sudo apt-get autoremove --purge mysql-server-5.0
sudo apt-get remove mysql-server
sudo apt-get autoremove mysql-server
sudo apt-get autoremove mysql-client
sudo apt-get remove mysql-common //这个很重要
上面的其实有一些是多余的。
清理残留数据
dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P