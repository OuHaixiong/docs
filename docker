
mac下安装docker
1，到官网下载stable版：https://store.docker.com/editions/community/docker-ce-desktop-mac?tab=description
2，双击Docker.dmg文件进行安装，一路next即可，安装完后会在右上角出现小鲸鱼的图标。也可以到官方文档中查看安装步骤：https://docs.docker.com
3，下面可以通过命令行直接操作docker了
4，到store.docker.com或hub.docker.com可以下载镜像文件
5，运行docker --version可查看docker的版本（docker-compose --version、docker-machine --version）


docker常用的命令
docker ps -a 显示所有的容器
docker ps    显示所有正在运行的容器
docker images 显示所有的镜像
docker run -d -p 80:80 --name webserver nginx   通过docker image运行一个docker容器[container]
# -d 让Docker容器跑在后台
# -i 容器的标准输入保持打开
# -t Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入
# --name XXX 容器名
# -v 映射目录
# -w /XX 设置工作目录；此设置将覆盖dockfile中的WORKDIR设置
# -p 端口映射
docker pull node:6.9.2 从官方拉取一个nodejs的镜像
docker build -t node_webserver_test . 在DockerFile所在的目录下，构建一个Image（名称为：node_webserver_test）
docker run -d -p 1337:1337 841a 基于镜像上运行一个容器。-d：在后台运行；-p表示端口映射，841a：是镜像ID的前四位，也可以写全
docker logs e31 打印容器日记，e31是容器[Container]ID的前三位
docker exec -i -t e31a /bin/bash 进入容器里面，进去后就像操作普通的linux一样，如果需要退出就执行exit
docker stop e31a 终止一个容器[docker stop $(docker ps -q):停用全部运行中的容器]
docker start/restart e31adea47be3 启动和重启一个容器
docker rm 841a6921f3bc 删除一个容器 【docker rm $(docker ps -aq):删除全部容器】
docker rmi a7376d9a4848 删除一个镜像
docker rmi $(docker images --filter dangling=true -q) 删除pull过程或者create过程产生的临时镜像，剩下的都是有用的镜像
docker stop $(docker ps -q) & docker rm $(docker ps -aq) 停用并删除所有容器
docker run -it -p 1337:1337 -v /Users/bear/Downloads/www/webserver_test:/data/www/webserver 2737dede0818[镜像ID] /bin/bash 把一个宿主机上的目录挂载到镜像里，并进入容器里
docker run -d -it -p 1337:1337 -v /Users/bear/Downloads/www/test/:/data/www/mBlock/ --name mBlock_web-server web-server_node-6.9.2 /bin/bash
docker save -o node.io[node.tar保存路径] faaadb4aaf9b 通过docker save命令，将镜像保存为tar文件
docker load -i /root/bear/node.tar 通过docker load命令将tar文件【镜像】加载进来


docker login --username=XXX registry.cn-XXX.alixx.com 登录docker云服务器
docker push registry.cn-XXX.XXX.com/makeblock/mblock-webservice-dev 把当前的镜像push到服务器





下面是典型的Dockerfile的写法：
FROM node:6.9.2                  # 用本地node:6.9.2的镜像作为基础镜像，进行构建（如果本地没有将到服务器上去获取）
RUN mkdir -p /Users/webserver    # 执行命令行，在镜像中创建目录
WORKDIR /Users/webserver         # 将我们创建的目录作为工作目录
COPY . /Users/webserver          # 拷贝本机当前目录下的所有文件到Image的/Users/webserver文件夹下
#RUN npm install                 # 运行命令，安装本目录下的所有node依赖包
EXPOSE 1337                      # 暴露端口号给主机，这样我们就能从外部访问镜像能的应用了
CMD ["npm", "start"]             # 运行命令，启动应用


