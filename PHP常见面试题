面试常见问题

1，简单介绍下自己？
    对方想了解的内容
    1）考察沟通能力
    2）考察性格
    3）考察工作经验
    注意事项
    1) 可以不说年龄
    2) 说完后可以说：“我的大致经历就这些，我说完了”
    3) 重点介绍近两年来的工作经历
    4) 也可以说说自己的兴趣爱好









技术问题：
1，session和cookie的区别？
    1) session是保存在服务器段的数据，cookie是保存在浏览器端的数据，因此session相对安全些，cookie在浏览器中可用工具进行查看，不是很安全
    2) session能保存的数据比cookie长，单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie（这个也和浏览器相关），而session不受限制
    3) session和cookie的联系：浏览器每次请求服务器是都会带上sessionId的cookie，用于识别会话状态
    4) cookie和session都是有生命周期的
    
2，你有没有用过版本控制工具？
    有，我们之前的公司开发就用svn工具进行版本控制，类似的工具有git、cvs
    使用版本控制工具的好处，能更好的团队协作开发，可避免代码被被人覆盖，也可以快速的查看或回滚历史纪录
    
3，你在公司做过什么功能？（回忆之前做过的功能，想想是怎么开法的，需要注意些什么）

4，ajax有了解吗？
    AJAX即“Asynchronous Javascript And XML”（异步JavaScript和XML），是指一种创建交互式网页应用的网页开发技术
    ajax实现了局部刷新功能（异步更新），提升用户体验

5，mvc模式是什么？你怎么看（理解）的？
    mvc是指应用程序的三层架构，分别为M：model模型层，V：view视图层，C：controller控制层
    m层是写业务逻辑和数据库操作的地方，v层是渲染html和数据的地方，c层是m层和v层之间的桥梁，c层通过传人的参数调用model层的方法获取数据，然后选择合适的视图层进行渲染
    MVC模式明确了每一层该写什么样的代码（项目结构更清楚，分工更明确），这样利于代码的开发、查找和维护，更容易理解和可重用性
    mvc的标准化能提升大型项目的开发和团队的协作效率
    mvc的不足之处：增加了系统结构和实现的复杂性；增加了代码量，增加了工作量；多层架构对访问性能有一定的损耗

6，有用过哪些框架？
    在项目中有使用过yii框架进行开发
    YII是一个基于组件的高性能的PHP的框架，是采用严格的面向对象编写的，它有很详细的官方文档，上手也比较快。
    Yii提供了MVC，DAO/ActiveRecord，widgets，caching，I18N等Web服务应用开发所需要的几乎一切功能
    使用框架能提升团队的开发效率和约束代码规范，具体如下几点
    1） 可以更好的组织代码和文件夹
    2） 有公共代码和类库，减少重复开发同一功能的时间
    3） 安全，框架帮我们做了很多安全问题封面的防范
    4） 框架实现了我们需要的大部分功能，我们只需拿来用即可，减少代码的编写，提高开放速度
    
7，echo、print和print_r的区别
    1） echo和print 只能打印简单类型变量，如：字符串和整形；print_r可以打印任何类型的数据，如：数组、对象
    2） echo 可以打印多个变量；print和print_r 不能打印多个变量
    3） echo是语法结构，没有返回值，速度快；print和print_r是函数，可以有返回值，速度相对echo慢一点

8，传址和传值的区别？
    $a = array();
    $b = &$a;// 传送的是变量的存储地址
    $b = $a; // 传值，相当于拷贝了一份
    1）传址的话如果变量的值改变了，相应的所有变量的值都会变，而传值不会
    （按值传递：函数范围内对值的任何改变在函数外部都会被忽略； 按引用[传址]传递：函数范围内对值的任何改变在函数外部也能反映出这些修改）
    2）传址速度比传值快
    
9，写一个匹配邮件格式的正则表达式（ouhaixiong@163.com）
    $email = 'ouhaixiong@163.com';
    $pattern = '/^[\w-]+(\.[\w-]+)*@\w+[\w-]*(\.[\w-]+)*(\.[a-zA-Z]{2,4})?\.[a-zA-Z]{2,6}$/';// 标准格式
    $boolean = preg_match($pattern, $email);
    也可以用php内置的函数进行验证
    $boolean = filter_var($email, FILTER_VALIDATE_EMAIL);
    var_dump($boolean);

10，Mysql的存储引擎；MyISAM和InnoDB的区别？
    1）MyISAM类型不支持事务处理等高级处理，而InnoDB类型支持.
    2）MyISAM类型查询速度比InnoDB快，InnoDB类型更新速度比MyISAM快
    3）InnoDB不支持FULLTEXT类型的索引.
    4）InnoDB 中不保存表的具体行数，也就是说，执行select count(*) from table时，InnoDB要扫描一遍整个表来计算有多少行，但是MyISAM只要简单的读出保存好的行数即可.
    5）对于AUTO_INCREMENT类型的字段，InnoDB中必须包含只有该字段的索引，但是在MyISAM表中，可以和其他字段一起建立联合索引。
    6）DELETE FROM table时，InnoDB不会重新建立表，而是一行一行的删除。
    7）LOAD TABLE FROM MASTER操作对InnoDB是不起作用的，解决方法是首先把InnoDB表改成MyISAM表，导入数据后再改成InnoDB表，但是对于使用的额外的InnoDB特性(例如外键)的表不适用.
    8）MyISAM支持表锁，InnoDB支持行锁。

11，php中单引号和双引号的区别？
    1） 单引号内部的变量不会执行，而双引号会执行
    2） 单引号中的内容不会被转义效率更高，双引号中的变量($var)和特殊字符(\r\n之类)会被转义，相比单引号效率低点

12，Include require include_once require_once 的区别
    1） 处理失败方式不同：
        require 失败时会产生一个致命级别错误（Fatal error），并停止程序运行。
        include 失败时只产生一个警告级别错误（Warning），程序继续运行。
    2） include_once/require_once和include/require 处理错误方式一样，唯一区别在于当所包含的文件已经存在时候，不再包含进来
    3） include有返回值，而require没有，include在执行文件时每次都要进行读取和评估，而require在PHP程序在执行前，就会先读入require()语句所引入的文件，使它变成PHP脚本文件的一部分；因此require速度比include快
    4） include和require引用文件时，最好使用绝对路径
    相关资料http://blog.csdn.net/baidu_28678737/article/details/50826725

13，HTTP协议中几个状态码的含义:503 500 401 403 404 200 301 302
	200 : 请求成功，请求的数据随之返回。
	301 : 永久性重定向。
	302 : 暂时行重定向。
	401 : 当前请求需要用户验证。
	403 : 服务器拒绝执行请求，即没有权限。
	404 : 请求失败，请求的数据在服务器上未发现。
	500 : 服务器错误。一般服务器端程序执行错误。
	503 : 服务器临时维护或过载。这个状态时临时性的。
	
14，(MySQL)请写出数据类型(int char varchar datetime text)的意思; 请问varchar和char有什么区别？
    int      : 数值类型
    char     : 固定长度字符串类型
    varchar  : 可变长度字符串类型
    datetime : 时期时间类型
    text     : 文本类型

    varchar和char有什么区别:
    1） char 长度是固定的，不管你存储的数据是多少他都会都固定的长度。而varchar则是可变长度但他要在总长度上加1字符，这个用来存储位置。
    2） char 固定长度，所以在处理速度上要比varchar快速很多，相对而言浪费存储空间，所以对存储不大，但在速度上有要求的可以使用char类型，反之可以用varchar类型来实现
    
15，MySQL数据库用作发布系统的存储，一天五万条以上的增量，预计运维三年,怎么优化？
    1） 设计良好的数据库结构，允许部分数据冗余，尽量避免join查询，提高效率。
    2） 选择合适的表字段数据类型和存储引擎，适当的添加索引。
    3） mysql数据库主从读写分离。
    4） 找规律分表，减少单表中的数据量提高查询速度。
    5） 添加缓存机制，比如memcached，redis，apc等。
    6） 不经常改动的页面，生成静态页面。
    7） 书写高效率的SQL。比如 SELECT * FROM TABEL 改为 SELECT field_1, field_2, field_3 FROM TABLE.

16，表单中get与post提交方法的区别?  
    1） get请求是通过url参数传递进行接收，而post是实体数据,可以通过表单提交
    2） get请求因为是通过url来传递参数，所以能传递的数据有限，具体各浏览器有差异，而post可以提交大量的数据
    3） get请求相对来讲没有post安全，因为是明文的
    
17，优化MYSQL数据库的方法？
    1） 选取最合适的字段类型和数据库存储引擎，设计良好的数据库结构，适当允许部分数据冗余
    2） 适当添加索引，比如对常查询且唯一性好的字段添加索引
    3） 尽可能减少字段名长度，尽量把字段设置为not null，如字符型可以默认为空字符串，如类似性别的可以用tinyint来表示：1：男，2：女
    4） 大数据可单独分离出来另建一张表
    5） 尽量避免join连表查询，使用join代替子查询，使用联合(UNION)来代替手动创建的临时表
    6） 记录数据库慢查询日记，针对具体业务优化慢查询语句
    7） 使用外键,优化锁定表
    
18，MYSQL取得当前时间的函数是什么？格式化日期的函数是什么？
    mysql获取当前时间：now(),格式化日期：date()
    
19，mysql_fetch_row()和mysql_fetch_array()之间有什么区别？
    mysql_fetch_row()是从结果集中取出一行数据作为枚举数组【数字数组】
    mysql_fetch_array()是从结果集中取出一行数据作为关联数组或数字数组，或两者兼得
    
20，什么是OOP？OOP有哪些特征请简要说明？
    OOP：Object Oriented Programming，面向对象的程序设计，也叫面向对象编程
    特征：抽象、多态、封装、继承

21，静态类、接口和抽象类的区别？
    1）  PHP中不支持静态类，只支持静态属性和方法，是以static声明
    2）  接口：以interface声明的类就是接口，接口不需要实现，让类看起来更清晰，实现（implements）接口的类（子类）一定需要实现接口中的所有方法；同样的接口在不同的子类中可以有不同的实现
    3）  抽象类：以abstract声明的类就是抽象类，和普通的类差不多，可以有属性和方法，也是用extends来继承抽象类
         用abstract声明的方法【未实现】是抽象方法（写法和接口一样），子类中对抽象方法可以不实现
         子类中实现抽象方法时，参数个数只能多，不能少(可能也是php的bug，不会报错)，且前面的参数的默认值需一致
    4)   子类中如果继承接口类就需要实现里面的所有方法（接口方法），但如果继续抽象类就不一定都实现
         接口类中不能有属性和实现，但抽象类中可以有
         如果是子类中有公有的属性或共有的方法（实现）就用抽象类，如果子类中的有公有的方法，但实现不一样就用接口

22，静态属性、静态方法和动态属性、动态方法的区别？
self
this
new ->


23，redis有哪些数据类型？hash和list有什么区别？各类型的使用场景如何？
    redis最主要的适用场景：
    少量数据存储，高速读写访问。通过数据全部in-momery的方式来保证高速访问，同时提供数据落地的功能。
    redis的主要数据类型有：string、list、set、zset、hash
    string：是简单的key-value类型，普通的键值对存储都可以用此类
    hash：是类似二维数组，内部存储的Value为一个HashMap，并提供了直接存取这个Map成员的接口，使用场景：如果数据需要重复序列化和反序列化操作时，或数据需要并发修改时，比较适合hash类型
    list：就是（双向）链表【即可以支持反向查找和遍历】，应用场景：比如twitter的关注列表，粉丝列表；消息队列
    set：就是一个集合（就是一堆不重复值的组合），Redis set对外提供的功能与list类似是一个列表的功能，特殊之处在于set是可以自动排重的，当你需要存储一个列表数据，又不希望出现重复数据时，set是一个很好的选择，并且set提供了判断某个成员是否在一个set集合内的重要接口，这个也是list所不能提供的。对很多需要求交集、并集、差集等操作的数据很适合用set，如：共同关注的人、共同的粉丝、共同的好友等
    zset：zset（sorted set）和set一样，区别是：set不是自动有序的，而sorted set可以通过用户额外提供一个优先级(score)的参数来为成员排序，并且是插入有序的，即自动排序。当你需要一个有序的并且不重复的集合列表，那么可以选择sorted set数据结构。另外还可以用Sorted Sets来做带权重的队列，比如普通消息的score为1，重要消息的score为2，然后工作线程可以选择按score的倒序来获取工作任务。让重要的任务优先执行。
    hash和list的区别：list更多用来做队列之类的，而hash适合有多个属性进行修改的数据

24，redis和mamcached的区别？
    1） Redis不仅仅支持简单的key/value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。
    2） Redis支持数据的备份，即master-slave模式的数据备份；而Mamcached不支持
    3） Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。而Memcached断电后数据即消失

25，php为false的值有哪些？
    0，false，'0'，''，null，array();
    array<>''; array() <> 0
    '' == NULL == 0 == false == array()  
    特例：0 == 'false':0等于任何字符串

26，mysql索引有哪些？主键索引和唯一索引有什么区别？
    索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。简单的说，索引就像书本的目录，目录可以快速找到所在页数，数据库中索引可以帮助快速找到数据，而不用全表扫描，合适的索引可以大大提高数据库查询的效率。
    索引可以加快数据检索操作，但会使数据修改变慢。因为每修改一次记录，索引就必须刷新一次。因此应该只为最经常查询和最经常排序的数据列建立索引。注意，如果某个数据列包含许多重复的内容，为它建立索引就没有太大的实际效果。
    主键索引、普通索引、唯一索引、多列索引(组合索引)、全文索引
    主键索引：由关键字primary定义的索引，主键索引的数据列也不允许有重复的值，[alter table `table_name` add primary key (`column`) [asc|desc] asc或desc指定升序或降序的索引值存储]
    普通索引：由关键子index或key定义的索引，唯一的作用是加快数据的访问速度，普通索引允许数据列包含重复的值[alter table `table_name` add index index_name(`column`[(length)])]
    唯一索引：由关键字unique定义的索引，不允许数据列有重复的值[alter table `table_name` add unique(`column`)]
    多列索引：索引可以覆盖多个列，比如：index(columnA, columnB)。但有多列进行查询时，组合索引前面的列，可以被用到索引；如：INDEX(A, B, C), 可以当做A、(A,B)的索引来使用，但不能当做B或(B,C)的索引来使用。 [alter table `table_name` add index index_name('column1','column2','column3')]
    全文索引：由关键字fulltext定义的索引，在对超过255个字符的文本字段做全文索引，为的是为查询类似LIKE '%word%'的检索提高速度。FULLTEXT索引仅可用于 MyISAM 表，InnoDB在mysql 5.6以后才支持全文索引。[alter table `table_name` add fulltext (`column`)]
    MySQL所允许的最大索引长度是255个字符(全文索引除外);多列索引可以为唯一索引、普通索引，也可以是主键索引【删除索引：drop index index_name on `table_name`；查询索引：show index from `table_name`】
    主键索引和唯一索引的区别是：主键索引是一种特殊的唯一索引；唯一索引可以有空值，但主键索引不能有空值。
    mysql不会使用索引的情况（执行查询时，MySQL只能使用一个索引，因此如果where子句中已经使用了索引的话，那么order by中的列是不会使用索引的; 会从多个索引中选择一个限制最为严格的索引）：
    1）WEHERE子句的查询条件里有不等号<>或not in(WHERE coloum != …)，MySQL将无法使用索引。
    2）WHERE子句的查询条件里使用了函数或数学表达式(WHERE DAY(column) = …)，MySQL也将无法使用索引。
    3）WHERE子句的查询条件里使用比较操作符LIKE和REGEXP，MySQL只有在搜索模板的第一个字符不是通配符的情况下才能使用索引。比如说，如果查询条件是LIKE 'abc%'，MySQL将使用索引；如果查询条件是LIKE '%abc'，MySQL将不使用索引
    4）WHERE条件中有or时，MySQL将无法使用索引；除非or条件的每个列都加了索引。同理is null、is not null也无法使用索引

27，mysql索引优化有哪些？什么时候使用索引？
    1）当某字段数据更新频率较低，查询频率较高
    2) 给字段设置一个默认值：只要有一列含有null值，这一列对于索引是无效的，所以我们在设计数据库时不要让字段的默认值为null
    3) 应该只为最经常查询和最经常排序的数据列建立索引。同样如果某个数据列包含许多重复的内容，为它建立索引就没有太大的实际效果（即字段中唯一值较好时，建议使用索引）
    4) 使用短索引：对串列进行索引，如果可能应该指定一个前缀长度。例如，如果有一个CHAR(255)的列，如果在前10个或20个字符内，多数值是惟一的，那么就不要对整个列进行索引。短索引不仅可以提高查询速度而且可以节省磁盘空间和I/O操作。
    5) mysql查询只会使用一个索引，如果经常同时有多列查询和多列排序的情况下，尽可能考虑创建复合（多列）索引
    6）经常有范围查询(>, <, =, >=, <=)、order by、group by、in、between或join发生时建议使用索引

28，php5的魔术方法有哪几个？并说出他们各自的用法
    __construct() : 构造函数，实例化对象时被调用
    __destruct()  : 析构函数，当某个对象的所有引用都被删除或对象被显示销毁时执行
    __call()      : 调用对象的方法不存在时被调用
    __callStatic(): 在静态[方法]上下文中调用一个不可访问方法时被调用
    __get()       : 读取对象的属性不存在（不可访问）时被调用
    __set()       : 给对象不存在（不可访问）的属性赋值时被调用
    __toString()  : 打印一个对象时被调用，比如：echo $obj;print($obj);
    __clone()     : 克隆对象时被调用，比如：$o = new Op(); $oo = clone $o;
    __unset()     : 当对不可访问属性调用unset()时被调用
    __isset()     : 当对对象不存在（不可访问）的属性调用isset()或empty()时被调用
    __sleep()     : serialize()一个对象之前前被调用，会检查对象中是否存在__sleep方法，如果存在会被调用，然后执行序列化操作。
    __wakeup()    : unserialize()之前被调用，做一些初始化对象的操作
    __set_state() : 调用var_export时被调用，用__set_state的返回值作为var_export的返回值
    __autoload()  : 实例化一个对象时，如果对应的类不存在，该方法被调用
    补充，php5的魔术常量
    __LINE__     : 返回当前行号   
    __FILE__     : 返回当前文件的完整路径和文件名，如果用在包含文件里面，则返回包含文件名。（绝对路径）
    __FUNCTION__ : 返回函数名称
    __CLASS__    : 返回类名
    __METHOD__   : 返回方法名。和__FUNCTION__一样
    
29，列举php数组合并的方式？并说出他们的区别？
    array_merge($a,$b,$c,...) : key为数字的所有值会保留，并且key从0开始；key为字符串时，如果出现相同的key后面的值覆盖前面的值
    $a + $b + $c ...          : 所有的key不变，当出现相同的key时，后面的值会舍去。（类似循环push数组，如果key相同就不插入）
    array_merge_recursive($a, $b, $c):key为数字的所有值会保留，并且key从0开始；key为字符串时，如果出现相同的key，会变成二维数组，所有的值都会保留放在二维数组的值中
    如果是多维数组进行合并时，会被看做为一维数组（只遍历一次，值为多维数组而已），遵循还是以上原则；如果key为数字型的字符串时，会转换为数字的key，也是遵循以上原则。
    特殊的地方：如果多维数组执行array_merge_recursive，相当于多维数组内再次调用array_merge_recursive进行合并（递归调用）

30，描述一下http协议及传输的包体内容
https://www.cnblogs.com/li0803/archive/2008/11/03/1324746.html

31，简述php的垃圾回收机制？

32，如何实现session的跨域共享？

33，php如何处理多线程？


34，请写出你所了解的设计模式及解释？

   
    28，mysql的主键自增id是怎么实现的？如果回滚了一条记录，这个id还会在吗？
29，   order by 班级 order by 年龄最小的人的姓名

35，请在题目下方写出执行完每一行以后每一个变量的值
        $a = 1; $b = 1; $c = 1; $d = 1; $e = 1;
        $b = &$a;          $a：1, $b：1, $c：1, $d：1, $e：1        // 引用打印值时是一样的，除非获取的地址才不一样
        $b = "6$b";        $a：'61', $b：'61', $c：1, $d：1, $e：1  // 这里对整形进行了隐形转字符串
        $c = $e = (++$b);  $a：62, $b：62, $c：62, $d：1, $e：62    // 需要自增时，进行了字符串转整（隐形）； ++$X 的话是先自增后使用
        $d = ($c > $b) ? ($a+=10) : ($b--); $a：61, $b：61, $c：62, $d：62, $e：62      // $X-- 的话是先使用后自减
        $e = implode(',', [$c, $e]);        $a：61, $b：61, $c：62, $d：62, $e：'62,62' // 连接连个字符串，也是隐形转整了

36，编译安装LAMP，安装顺序需要注意什么？
    1) yum安装依赖包，如：gcc、 gcc-c++、 autoconf、libxml2-devel、 zlib-devel、 glibc glibc-devel、curl-devel、openssl、openssl-devel等
    2) 依次编译安装apache、mysql、php，因为php中的mysql扩展依赖mysql环境
    3) 安装php之前，需要先安装图形库，为编译php做准备；如：libxml2、jpegsrc.v8b、libpng、freetype、gd
    4) 开启80端口。如果需要其他的扩展，分别安装；如：redis、imagick
    
37，请设计一条crontab配置，实现每隔一分钟将系统的负载信息记录到/var/log/load.log文件里
    crontab -e 加入：    
    */1 * * * * uptime >> /var/log/load.log 2>&1
    杀死crond服务器的进程:killall crond 
    启动 crond 服务器:/usr/sbin/crond
    
38，使用PHP实现当一个类的属性发生变化时，另外一个类就可以收到通知（列出关键点即可）
    使用观察者模式
    1)
    2)
    3)
    4)
    
，索引类型有Hash索引和BTress索引，他们的区别是什么？
Memory存储引擎可以选择Hash或BTree索引，Hash索引只能用于=或<=>的等式比较。
B-tree索引以B+树的结构存储数据
索引文件是一个二叉树类型的文件
